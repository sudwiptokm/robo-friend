{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","className","alt","src","width","CardList","robots","cardComponent","map","user","i","SearchBox","searchchange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","filteredRobots","this","filter","robot","toLocaleLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAeeA,EAbF,SAACC,GACV,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,GAAIC,EAASH,EAATG,MACjB,OACI,sBAAKC,UAAY,qDAAjB,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA4BJ,GAAMK,MAAM,UAC3D,gCACI,6BAAKN,IACL,4BAAIE,WCMTK,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAO,cAAC,EAAD,CAAcX,GAAMO,EAAOI,GAAGX,GAAID,KAAQQ,EAAOI,GAAGZ,KAAME,MAASM,EAAOI,GAAGV,OAAlEU,MAGtB,OACI,8BACKH,KCAEI,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKX,UAAU,MAAf,SACI,uBAAOY,KAAK,SAASC,YAAY,gBAAgBb,UAAU,kCAAkCc,SAAUH,OCQpGI,G,MAXA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKvB,EAAMwB,aC0CJC,E,kDAxCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACXvB,OAAS,GACToB,YAAc,IAJJ,E,qDAQd,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtB,GAAI,OAAI,EAAKgB,SAAS,CAACnB,OAAQG,S,oBAOvC,WAAS,IAAD,OACAyB,EAAiBC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAAC,GAC9C,OAAOA,EAAMvC,KAAKwC,oBAAoBC,SAAS,EAAKV,MAAMH,YAAYY,wBAExE,OAAiC,IAA7BH,KAAKN,MAAMvB,OAAOkC,OACb,yCAIL,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,SAAd,4BACA,cAAC,EAAD,CAAWW,aAAgBuB,KAAKZ,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAU4B,a,GAhCdO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7407a370.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const {name, id, email} = props; //Object Destructuring\r\n    return(\r\n        <div className = \"tc bg-light-blue br3 dib pa3 ma2 grow bw5 shadow-5\">\r\n            <img alt = \"Robots\" src = {`https://robohash.org/${id}`} width=\"300px\"/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user,i) =>{\r\n        return <Card key={i} id = {robots[i].id} name = {robots[i].name} email = {robots[i].email} />\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from \"react\";\r\n\r\nconst SearchBox = ({searchchange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input type=\"search\" placeholder=\"search robots\" className=\"pa3 ba b--green bg-washed-green\" onChange={searchchange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: \"scroll\", border: \"1px solid black\", height: \"910px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport \"./App.css\"\r\nimport Scroll from \"../Components/Scroll\"\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots : [],\r\n      searchfield : \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(user => this.setState({robots: user}))\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value})\r\n    \r\n  }\r\n  render(){\r\n    const filteredRobots = this.state.robots.filter(robot =>{\r\n      return robot.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase())\r\n    })\r\n    if (this.state.robots.length === 0){\r\n      return <h1>Loading</h1>\r\n    }\r\n    else{\r\n      return(\r\n        <div className=\"tc\">\r\n          <h1 className=\"ttu f1\"> Robo Friends </h1>\r\n          <SearchBox searchchange = {this.onSearchChange}/>\r\n          <Scroll>\r\n            <CardList robots = {filteredRobots} />\r\n          </Scroll>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Container/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}